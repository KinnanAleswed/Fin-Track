
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model FT_DetailedLookup
 * 
 */
export type FT_DetailedLookup = $Result.DefaultSelection<Prisma.$FT_DetailedLookupPayload>
/**
 * Model FT_MasterLookup
 * 
 */
export type FT_MasterLookup = $Result.DefaultSelection<Prisma.$FT_MasterLookupPayload>
/**
 * Model FT_Projects
 * 
 */
export type FT_Projects = $Result.DefaultSelection<Prisma.$FT_ProjectsPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more FT_DetailedLookups
 * const fT_DetailedLookups = await prisma.fT_DetailedLookup.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more FT_DetailedLookups
   * const fT_DetailedLookups = await prisma.fT_DetailedLookup.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.fT_DetailedLookup`: Exposes CRUD operations for the **FT_DetailedLookup** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FT_DetailedLookups
    * const fT_DetailedLookups = await prisma.fT_DetailedLookup.findMany()
    * ```
    */
  get fT_DetailedLookup(): Prisma.FT_DetailedLookupDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.fT_MasterLookup`: Exposes CRUD operations for the **FT_MasterLookup** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FT_MasterLookups
    * const fT_MasterLookups = await prisma.fT_MasterLookup.findMany()
    * ```
    */
  get fT_MasterLookup(): Prisma.FT_MasterLookupDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.fT_Projects`: Exposes CRUD operations for the **FT_Projects** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FT_Projects
    * const fT_Projects = await prisma.fT_Projects.findMany()
    * ```
    */
  get fT_Projects(): Prisma.FT_ProjectsDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.8.2
   * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    FT_DetailedLookup: 'FT_DetailedLookup',
    FT_MasterLookup: 'FT_MasterLookup',
    FT_Projects: 'FT_Projects'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "fT_DetailedLookup" | "fT_MasterLookup" | "fT_Projects"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      FT_DetailedLookup: {
        payload: Prisma.$FT_DetailedLookupPayload<ExtArgs>
        fields: Prisma.FT_DetailedLookupFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FT_DetailedLookupFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FT_DetailedLookupPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FT_DetailedLookupFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FT_DetailedLookupPayload>
          }
          findFirst: {
            args: Prisma.FT_DetailedLookupFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FT_DetailedLookupPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FT_DetailedLookupFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FT_DetailedLookupPayload>
          }
          findMany: {
            args: Prisma.FT_DetailedLookupFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FT_DetailedLookupPayload>[]
          }
          create: {
            args: Prisma.FT_DetailedLookupCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FT_DetailedLookupPayload>
          }
          createMany: {
            args: Prisma.FT_DetailedLookupCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.FT_DetailedLookupDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FT_DetailedLookupPayload>
          }
          update: {
            args: Prisma.FT_DetailedLookupUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FT_DetailedLookupPayload>
          }
          deleteMany: {
            args: Prisma.FT_DetailedLookupDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FT_DetailedLookupUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FT_DetailedLookupUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FT_DetailedLookupPayload>
          }
          aggregate: {
            args: Prisma.FT_DetailedLookupAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFT_DetailedLookup>
          }
          groupBy: {
            args: Prisma.FT_DetailedLookupGroupByArgs<ExtArgs>
            result: $Utils.Optional<FT_DetailedLookupGroupByOutputType>[]
          }
          count: {
            args: Prisma.FT_DetailedLookupCountArgs<ExtArgs>
            result: $Utils.Optional<FT_DetailedLookupCountAggregateOutputType> | number
          }
        }
      }
      FT_MasterLookup: {
        payload: Prisma.$FT_MasterLookupPayload<ExtArgs>
        fields: Prisma.FT_MasterLookupFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FT_MasterLookupFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FT_MasterLookupPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FT_MasterLookupFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FT_MasterLookupPayload>
          }
          findFirst: {
            args: Prisma.FT_MasterLookupFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FT_MasterLookupPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FT_MasterLookupFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FT_MasterLookupPayload>
          }
          findMany: {
            args: Prisma.FT_MasterLookupFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FT_MasterLookupPayload>[]
          }
          create: {
            args: Prisma.FT_MasterLookupCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FT_MasterLookupPayload>
          }
          createMany: {
            args: Prisma.FT_MasterLookupCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.FT_MasterLookupDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FT_MasterLookupPayload>
          }
          update: {
            args: Prisma.FT_MasterLookupUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FT_MasterLookupPayload>
          }
          deleteMany: {
            args: Prisma.FT_MasterLookupDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FT_MasterLookupUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FT_MasterLookupUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FT_MasterLookupPayload>
          }
          aggregate: {
            args: Prisma.FT_MasterLookupAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFT_MasterLookup>
          }
          groupBy: {
            args: Prisma.FT_MasterLookupGroupByArgs<ExtArgs>
            result: $Utils.Optional<FT_MasterLookupGroupByOutputType>[]
          }
          count: {
            args: Prisma.FT_MasterLookupCountArgs<ExtArgs>
            result: $Utils.Optional<FT_MasterLookupCountAggregateOutputType> | number
          }
        }
      }
      FT_Projects: {
        payload: Prisma.$FT_ProjectsPayload<ExtArgs>
        fields: Prisma.FT_ProjectsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FT_ProjectsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FT_ProjectsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FT_ProjectsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FT_ProjectsPayload>
          }
          findFirst: {
            args: Prisma.FT_ProjectsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FT_ProjectsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FT_ProjectsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FT_ProjectsPayload>
          }
          findMany: {
            args: Prisma.FT_ProjectsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FT_ProjectsPayload>[]
          }
          create: {
            args: Prisma.FT_ProjectsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FT_ProjectsPayload>
          }
          createMany: {
            args: Prisma.FT_ProjectsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.FT_ProjectsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FT_ProjectsPayload>
          }
          update: {
            args: Prisma.FT_ProjectsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FT_ProjectsPayload>
          }
          deleteMany: {
            args: Prisma.FT_ProjectsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FT_ProjectsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FT_ProjectsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FT_ProjectsPayload>
          }
          aggregate: {
            args: Prisma.FT_ProjectsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFT_Projects>
          }
          groupBy: {
            args: Prisma.FT_ProjectsGroupByArgs<ExtArgs>
            result: $Utils.Optional<FT_ProjectsGroupByOutputType>[]
          }
          count: {
            args: Prisma.FT_ProjectsCountArgs<ExtArgs>
            result: $Utils.Optional<FT_ProjectsCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    fT_DetailedLookup?: FT_DetailedLookupOmit
    fT_MasterLookup?: FT_MasterLookupOmit
    fT_Projects?: FT_ProjectsOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */



  /**
   * Models
   */

  /**
   * Model FT_DetailedLookup
   */

  export type AggregateFT_DetailedLookup = {
    _count: FT_DetailedLookupCountAggregateOutputType | null
    _avg: FT_DetailedLookupAvgAggregateOutputType | null
    _sum: FT_DetailedLookupSumAggregateOutputType | null
    _min: FT_DetailedLookupMinAggregateOutputType | null
    _max: FT_DetailedLookupMaxAggregateOutputType | null
  }

  export type FT_DetailedLookupAvgAggregateOutputType = {
    Id: number | null
    Master_ID: number | null
    isActive: number | null
    createdBy: number | null
    modifiedBy: number | null
  }

  export type FT_DetailedLookupSumAggregateOutputType = {
    Id: number | null
    Master_ID: number | null
    isActive: number | null
    createdBy: number | null
    modifiedBy: number | null
  }

  export type FT_DetailedLookupMinAggregateOutputType = {
    Id: number | null
    Master_ID: number | null
    Code: string | null
    Value_AR: string | null
    Value_EN: string | null
    isActive: number | null
    createdBy: number | null
    createdDate: Date | null
    modifiedBy: number | null
    modifiedDate: Date | null
    comments: string | null
  }

  export type FT_DetailedLookupMaxAggregateOutputType = {
    Id: number | null
    Master_ID: number | null
    Code: string | null
    Value_AR: string | null
    Value_EN: string | null
    isActive: number | null
    createdBy: number | null
    createdDate: Date | null
    modifiedBy: number | null
    modifiedDate: Date | null
    comments: string | null
  }

  export type FT_DetailedLookupCountAggregateOutputType = {
    Id: number
    Master_ID: number
    Code: number
    Value_AR: number
    Value_EN: number
    isActive: number
    createdBy: number
    createdDate: number
    modifiedBy: number
    modifiedDate: number
    comments: number
    _all: number
  }


  export type FT_DetailedLookupAvgAggregateInputType = {
    Id?: true
    Master_ID?: true
    isActive?: true
    createdBy?: true
    modifiedBy?: true
  }

  export type FT_DetailedLookupSumAggregateInputType = {
    Id?: true
    Master_ID?: true
    isActive?: true
    createdBy?: true
    modifiedBy?: true
  }

  export type FT_DetailedLookupMinAggregateInputType = {
    Id?: true
    Master_ID?: true
    Code?: true
    Value_AR?: true
    Value_EN?: true
    isActive?: true
    createdBy?: true
    createdDate?: true
    modifiedBy?: true
    modifiedDate?: true
    comments?: true
  }

  export type FT_DetailedLookupMaxAggregateInputType = {
    Id?: true
    Master_ID?: true
    Code?: true
    Value_AR?: true
    Value_EN?: true
    isActive?: true
    createdBy?: true
    createdDate?: true
    modifiedBy?: true
    modifiedDate?: true
    comments?: true
  }

  export type FT_DetailedLookupCountAggregateInputType = {
    Id?: true
    Master_ID?: true
    Code?: true
    Value_AR?: true
    Value_EN?: true
    isActive?: true
    createdBy?: true
    createdDate?: true
    modifiedBy?: true
    modifiedDate?: true
    comments?: true
    _all?: true
  }

  export type FT_DetailedLookupAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FT_DetailedLookup to aggregate.
     */
    where?: FT_DetailedLookupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FT_DetailedLookups to fetch.
     */
    orderBy?: FT_DetailedLookupOrderByWithRelationInput | FT_DetailedLookupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FT_DetailedLookupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FT_DetailedLookups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FT_DetailedLookups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FT_DetailedLookups
    **/
    _count?: true | FT_DetailedLookupCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FT_DetailedLookupAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FT_DetailedLookupSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FT_DetailedLookupMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FT_DetailedLookupMaxAggregateInputType
  }

  export type GetFT_DetailedLookupAggregateType<T extends FT_DetailedLookupAggregateArgs> = {
        [P in keyof T & keyof AggregateFT_DetailedLookup]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFT_DetailedLookup[P]>
      : GetScalarType<T[P], AggregateFT_DetailedLookup[P]>
  }




  export type FT_DetailedLookupGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FT_DetailedLookupWhereInput
    orderBy?: FT_DetailedLookupOrderByWithAggregationInput | FT_DetailedLookupOrderByWithAggregationInput[]
    by: FT_DetailedLookupScalarFieldEnum[] | FT_DetailedLookupScalarFieldEnum
    having?: FT_DetailedLookupScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FT_DetailedLookupCountAggregateInputType | true
    _avg?: FT_DetailedLookupAvgAggregateInputType
    _sum?: FT_DetailedLookupSumAggregateInputType
    _min?: FT_DetailedLookupMinAggregateInputType
    _max?: FT_DetailedLookupMaxAggregateInputType
  }

  export type FT_DetailedLookupGroupByOutputType = {
    Id: number
    Master_ID: number
    Code: string
    Value_AR: string
    Value_EN: string
    isActive: number
    createdBy: number
    createdDate: Date
    modifiedBy: number | null
    modifiedDate: Date | null
    comments: string | null
    _count: FT_DetailedLookupCountAggregateOutputType | null
    _avg: FT_DetailedLookupAvgAggregateOutputType | null
    _sum: FT_DetailedLookupSumAggregateOutputType | null
    _min: FT_DetailedLookupMinAggregateOutputType | null
    _max: FT_DetailedLookupMaxAggregateOutputType | null
  }

  type GetFT_DetailedLookupGroupByPayload<T extends FT_DetailedLookupGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FT_DetailedLookupGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FT_DetailedLookupGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FT_DetailedLookupGroupByOutputType[P]>
            : GetScalarType<T[P], FT_DetailedLookupGroupByOutputType[P]>
        }
      >
    >


  export type FT_DetailedLookupSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Master_ID?: boolean
    Code?: boolean
    Value_AR?: boolean
    Value_EN?: boolean
    isActive?: boolean
    createdBy?: boolean
    createdDate?: boolean
    modifiedBy?: boolean
    modifiedDate?: boolean
    comments?: boolean
  }, ExtArgs["result"]["fT_DetailedLookup"]>



  export type FT_DetailedLookupSelectScalar = {
    Id?: boolean
    Master_ID?: boolean
    Code?: boolean
    Value_AR?: boolean
    Value_EN?: boolean
    isActive?: boolean
    createdBy?: boolean
    createdDate?: boolean
    modifiedBy?: boolean
    modifiedDate?: boolean
    comments?: boolean
  }

  export type FT_DetailedLookupOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "Master_ID" | "Code" | "Value_AR" | "Value_EN" | "isActive" | "createdBy" | "createdDate" | "modifiedBy" | "modifiedDate" | "comments", ExtArgs["result"]["fT_DetailedLookup"]>

  export type $FT_DetailedLookupPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FT_DetailedLookup"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      Id: number
      Master_ID: number
      Code: string
      Value_AR: string
      Value_EN: string
      isActive: number
      createdBy: number
      createdDate: Date
      modifiedBy: number | null
      modifiedDate: Date | null
      comments: string | null
    }, ExtArgs["result"]["fT_DetailedLookup"]>
    composites: {}
  }

  type FT_DetailedLookupGetPayload<S extends boolean | null | undefined | FT_DetailedLookupDefaultArgs> = $Result.GetResult<Prisma.$FT_DetailedLookupPayload, S>

  type FT_DetailedLookupCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FT_DetailedLookupFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FT_DetailedLookupCountAggregateInputType | true
    }

  export interface FT_DetailedLookupDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FT_DetailedLookup'], meta: { name: 'FT_DetailedLookup' } }
    /**
     * Find zero or one FT_DetailedLookup that matches the filter.
     * @param {FT_DetailedLookupFindUniqueArgs} args - Arguments to find a FT_DetailedLookup
     * @example
     * // Get one FT_DetailedLookup
     * const fT_DetailedLookup = await prisma.fT_DetailedLookup.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FT_DetailedLookupFindUniqueArgs>(args: SelectSubset<T, FT_DetailedLookupFindUniqueArgs<ExtArgs>>): Prisma__FT_DetailedLookupClient<$Result.GetResult<Prisma.$FT_DetailedLookupPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one FT_DetailedLookup that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FT_DetailedLookupFindUniqueOrThrowArgs} args - Arguments to find a FT_DetailedLookup
     * @example
     * // Get one FT_DetailedLookup
     * const fT_DetailedLookup = await prisma.fT_DetailedLookup.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FT_DetailedLookupFindUniqueOrThrowArgs>(args: SelectSubset<T, FT_DetailedLookupFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FT_DetailedLookupClient<$Result.GetResult<Prisma.$FT_DetailedLookupPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FT_DetailedLookup that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FT_DetailedLookupFindFirstArgs} args - Arguments to find a FT_DetailedLookup
     * @example
     * // Get one FT_DetailedLookup
     * const fT_DetailedLookup = await prisma.fT_DetailedLookup.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FT_DetailedLookupFindFirstArgs>(args?: SelectSubset<T, FT_DetailedLookupFindFirstArgs<ExtArgs>>): Prisma__FT_DetailedLookupClient<$Result.GetResult<Prisma.$FT_DetailedLookupPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FT_DetailedLookup that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FT_DetailedLookupFindFirstOrThrowArgs} args - Arguments to find a FT_DetailedLookup
     * @example
     * // Get one FT_DetailedLookup
     * const fT_DetailedLookup = await prisma.fT_DetailedLookup.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FT_DetailedLookupFindFirstOrThrowArgs>(args?: SelectSubset<T, FT_DetailedLookupFindFirstOrThrowArgs<ExtArgs>>): Prisma__FT_DetailedLookupClient<$Result.GetResult<Prisma.$FT_DetailedLookupPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more FT_DetailedLookups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FT_DetailedLookupFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FT_DetailedLookups
     * const fT_DetailedLookups = await prisma.fT_DetailedLookup.findMany()
     * 
     * // Get first 10 FT_DetailedLookups
     * const fT_DetailedLookups = await prisma.fT_DetailedLookup.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const fT_DetailedLookupWithIdOnly = await prisma.fT_DetailedLookup.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends FT_DetailedLookupFindManyArgs>(args?: SelectSubset<T, FT_DetailedLookupFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FT_DetailedLookupPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a FT_DetailedLookup.
     * @param {FT_DetailedLookupCreateArgs} args - Arguments to create a FT_DetailedLookup.
     * @example
     * // Create one FT_DetailedLookup
     * const FT_DetailedLookup = await prisma.fT_DetailedLookup.create({
     *   data: {
     *     // ... data to create a FT_DetailedLookup
     *   }
     * })
     * 
     */
    create<T extends FT_DetailedLookupCreateArgs>(args: SelectSubset<T, FT_DetailedLookupCreateArgs<ExtArgs>>): Prisma__FT_DetailedLookupClient<$Result.GetResult<Prisma.$FT_DetailedLookupPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many FT_DetailedLookups.
     * @param {FT_DetailedLookupCreateManyArgs} args - Arguments to create many FT_DetailedLookups.
     * @example
     * // Create many FT_DetailedLookups
     * const fT_DetailedLookup = await prisma.fT_DetailedLookup.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FT_DetailedLookupCreateManyArgs>(args?: SelectSubset<T, FT_DetailedLookupCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a FT_DetailedLookup.
     * @param {FT_DetailedLookupDeleteArgs} args - Arguments to delete one FT_DetailedLookup.
     * @example
     * // Delete one FT_DetailedLookup
     * const FT_DetailedLookup = await prisma.fT_DetailedLookup.delete({
     *   where: {
     *     // ... filter to delete one FT_DetailedLookup
     *   }
     * })
     * 
     */
    delete<T extends FT_DetailedLookupDeleteArgs>(args: SelectSubset<T, FT_DetailedLookupDeleteArgs<ExtArgs>>): Prisma__FT_DetailedLookupClient<$Result.GetResult<Prisma.$FT_DetailedLookupPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one FT_DetailedLookup.
     * @param {FT_DetailedLookupUpdateArgs} args - Arguments to update one FT_DetailedLookup.
     * @example
     * // Update one FT_DetailedLookup
     * const fT_DetailedLookup = await prisma.fT_DetailedLookup.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FT_DetailedLookupUpdateArgs>(args: SelectSubset<T, FT_DetailedLookupUpdateArgs<ExtArgs>>): Prisma__FT_DetailedLookupClient<$Result.GetResult<Prisma.$FT_DetailedLookupPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more FT_DetailedLookups.
     * @param {FT_DetailedLookupDeleteManyArgs} args - Arguments to filter FT_DetailedLookups to delete.
     * @example
     * // Delete a few FT_DetailedLookups
     * const { count } = await prisma.fT_DetailedLookup.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FT_DetailedLookupDeleteManyArgs>(args?: SelectSubset<T, FT_DetailedLookupDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FT_DetailedLookups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FT_DetailedLookupUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FT_DetailedLookups
     * const fT_DetailedLookup = await prisma.fT_DetailedLookup.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FT_DetailedLookupUpdateManyArgs>(args: SelectSubset<T, FT_DetailedLookupUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one FT_DetailedLookup.
     * @param {FT_DetailedLookupUpsertArgs} args - Arguments to update or create a FT_DetailedLookup.
     * @example
     * // Update or create a FT_DetailedLookup
     * const fT_DetailedLookup = await prisma.fT_DetailedLookup.upsert({
     *   create: {
     *     // ... data to create a FT_DetailedLookup
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FT_DetailedLookup we want to update
     *   }
     * })
     */
    upsert<T extends FT_DetailedLookupUpsertArgs>(args: SelectSubset<T, FT_DetailedLookupUpsertArgs<ExtArgs>>): Prisma__FT_DetailedLookupClient<$Result.GetResult<Prisma.$FT_DetailedLookupPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of FT_DetailedLookups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FT_DetailedLookupCountArgs} args - Arguments to filter FT_DetailedLookups to count.
     * @example
     * // Count the number of FT_DetailedLookups
     * const count = await prisma.fT_DetailedLookup.count({
     *   where: {
     *     // ... the filter for the FT_DetailedLookups we want to count
     *   }
     * })
    **/
    count<T extends FT_DetailedLookupCountArgs>(
      args?: Subset<T, FT_DetailedLookupCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FT_DetailedLookupCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FT_DetailedLookup.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FT_DetailedLookupAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FT_DetailedLookupAggregateArgs>(args: Subset<T, FT_DetailedLookupAggregateArgs>): Prisma.PrismaPromise<GetFT_DetailedLookupAggregateType<T>>

    /**
     * Group by FT_DetailedLookup.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FT_DetailedLookupGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FT_DetailedLookupGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FT_DetailedLookupGroupByArgs['orderBy'] }
        : { orderBy?: FT_DetailedLookupGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FT_DetailedLookupGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFT_DetailedLookupGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FT_DetailedLookup model
   */
  readonly fields: FT_DetailedLookupFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FT_DetailedLookup.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FT_DetailedLookupClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FT_DetailedLookup model
   */
  interface FT_DetailedLookupFieldRefs {
    readonly Id: FieldRef<"FT_DetailedLookup", 'Int'>
    readonly Master_ID: FieldRef<"FT_DetailedLookup", 'Int'>
    readonly Code: FieldRef<"FT_DetailedLookup", 'String'>
    readonly Value_AR: FieldRef<"FT_DetailedLookup", 'String'>
    readonly Value_EN: FieldRef<"FT_DetailedLookup", 'String'>
    readonly isActive: FieldRef<"FT_DetailedLookup", 'Int'>
    readonly createdBy: FieldRef<"FT_DetailedLookup", 'Int'>
    readonly createdDate: FieldRef<"FT_DetailedLookup", 'DateTime'>
    readonly modifiedBy: FieldRef<"FT_DetailedLookup", 'Int'>
    readonly modifiedDate: FieldRef<"FT_DetailedLookup", 'DateTime'>
    readonly comments: FieldRef<"FT_DetailedLookup", 'String'>
  }
    

  // Custom InputTypes
  /**
   * FT_DetailedLookup findUnique
   */
  export type FT_DetailedLookupFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FT_DetailedLookup
     */
    select?: FT_DetailedLookupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FT_DetailedLookup
     */
    omit?: FT_DetailedLookupOmit<ExtArgs> | null
    /**
     * Filter, which FT_DetailedLookup to fetch.
     */
    where: FT_DetailedLookupWhereUniqueInput
  }

  /**
   * FT_DetailedLookup findUniqueOrThrow
   */
  export type FT_DetailedLookupFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FT_DetailedLookup
     */
    select?: FT_DetailedLookupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FT_DetailedLookup
     */
    omit?: FT_DetailedLookupOmit<ExtArgs> | null
    /**
     * Filter, which FT_DetailedLookup to fetch.
     */
    where: FT_DetailedLookupWhereUniqueInput
  }

  /**
   * FT_DetailedLookup findFirst
   */
  export type FT_DetailedLookupFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FT_DetailedLookup
     */
    select?: FT_DetailedLookupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FT_DetailedLookup
     */
    omit?: FT_DetailedLookupOmit<ExtArgs> | null
    /**
     * Filter, which FT_DetailedLookup to fetch.
     */
    where?: FT_DetailedLookupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FT_DetailedLookups to fetch.
     */
    orderBy?: FT_DetailedLookupOrderByWithRelationInput | FT_DetailedLookupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FT_DetailedLookups.
     */
    cursor?: FT_DetailedLookupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FT_DetailedLookups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FT_DetailedLookups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FT_DetailedLookups.
     */
    distinct?: FT_DetailedLookupScalarFieldEnum | FT_DetailedLookupScalarFieldEnum[]
  }

  /**
   * FT_DetailedLookup findFirstOrThrow
   */
  export type FT_DetailedLookupFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FT_DetailedLookup
     */
    select?: FT_DetailedLookupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FT_DetailedLookup
     */
    omit?: FT_DetailedLookupOmit<ExtArgs> | null
    /**
     * Filter, which FT_DetailedLookup to fetch.
     */
    where?: FT_DetailedLookupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FT_DetailedLookups to fetch.
     */
    orderBy?: FT_DetailedLookupOrderByWithRelationInput | FT_DetailedLookupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FT_DetailedLookups.
     */
    cursor?: FT_DetailedLookupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FT_DetailedLookups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FT_DetailedLookups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FT_DetailedLookups.
     */
    distinct?: FT_DetailedLookupScalarFieldEnum | FT_DetailedLookupScalarFieldEnum[]
  }

  /**
   * FT_DetailedLookup findMany
   */
  export type FT_DetailedLookupFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FT_DetailedLookup
     */
    select?: FT_DetailedLookupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FT_DetailedLookup
     */
    omit?: FT_DetailedLookupOmit<ExtArgs> | null
    /**
     * Filter, which FT_DetailedLookups to fetch.
     */
    where?: FT_DetailedLookupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FT_DetailedLookups to fetch.
     */
    orderBy?: FT_DetailedLookupOrderByWithRelationInput | FT_DetailedLookupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FT_DetailedLookups.
     */
    cursor?: FT_DetailedLookupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FT_DetailedLookups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FT_DetailedLookups.
     */
    skip?: number
    distinct?: FT_DetailedLookupScalarFieldEnum | FT_DetailedLookupScalarFieldEnum[]
  }

  /**
   * FT_DetailedLookup create
   */
  export type FT_DetailedLookupCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FT_DetailedLookup
     */
    select?: FT_DetailedLookupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FT_DetailedLookup
     */
    omit?: FT_DetailedLookupOmit<ExtArgs> | null
    /**
     * The data needed to create a FT_DetailedLookup.
     */
    data: XOR<FT_DetailedLookupCreateInput, FT_DetailedLookupUncheckedCreateInput>
  }

  /**
   * FT_DetailedLookup createMany
   */
  export type FT_DetailedLookupCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FT_DetailedLookups.
     */
    data: FT_DetailedLookupCreateManyInput | FT_DetailedLookupCreateManyInput[]
  }

  /**
   * FT_DetailedLookup update
   */
  export type FT_DetailedLookupUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FT_DetailedLookup
     */
    select?: FT_DetailedLookupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FT_DetailedLookup
     */
    omit?: FT_DetailedLookupOmit<ExtArgs> | null
    /**
     * The data needed to update a FT_DetailedLookup.
     */
    data: XOR<FT_DetailedLookupUpdateInput, FT_DetailedLookupUncheckedUpdateInput>
    /**
     * Choose, which FT_DetailedLookup to update.
     */
    where: FT_DetailedLookupWhereUniqueInput
  }

  /**
   * FT_DetailedLookup updateMany
   */
  export type FT_DetailedLookupUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FT_DetailedLookups.
     */
    data: XOR<FT_DetailedLookupUpdateManyMutationInput, FT_DetailedLookupUncheckedUpdateManyInput>
    /**
     * Filter which FT_DetailedLookups to update
     */
    where?: FT_DetailedLookupWhereInput
    /**
     * Limit how many FT_DetailedLookups to update.
     */
    limit?: number
  }

  /**
   * FT_DetailedLookup upsert
   */
  export type FT_DetailedLookupUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FT_DetailedLookup
     */
    select?: FT_DetailedLookupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FT_DetailedLookup
     */
    omit?: FT_DetailedLookupOmit<ExtArgs> | null
    /**
     * The filter to search for the FT_DetailedLookup to update in case it exists.
     */
    where: FT_DetailedLookupWhereUniqueInput
    /**
     * In case the FT_DetailedLookup found by the `where` argument doesn't exist, create a new FT_DetailedLookup with this data.
     */
    create: XOR<FT_DetailedLookupCreateInput, FT_DetailedLookupUncheckedCreateInput>
    /**
     * In case the FT_DetailedLookup was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FT_DetailedLookupUpdateInput, FT_DetailedLookupUncheckedUpdateInput>
  }

  /**
   * FT_DetailedLookup delete
   */
  export type FT_DetailedLookupDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FT_DetailedLookup
     */
    select?: FT_DetailedLookupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FT_DetailedLookup
     */
    omit?: FT_DetailedLookupOmit<ExtArgs> | null
    /**
     * Filter which FT_DetailedLookup to delete.
     */
    where: FT_DetailedLookupWhereUniqueInput
  }

  /**
   * FT_DetailedLookup deleteMany
   */
  export type FT_DetailedLookupDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FT_DetailedLookups to delete
     */
    where?: FT_DetailedLookupWhereInput
    /**
     * Limit how many FT_DetailedLookups to delete.
     */
    limit?: number
  }

  /**
   * FT_DetailedLookup without action
   */
  export type FT_DetailedLookupDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FT_DetailedLookup
     */
    select?: FT_DetailedLookupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FT_DetailedLookup
     */
    omit?: FT_DetailedLookupOmit<ExtArgs> | null
  }


  /**
   * Model FT_MasterLookup
   */

  export type AggregateFT_MasterLookup = {
    _count: FT_MasterLookupCountAggregateOutputType | null
    _avg: FT_MasterLookupAvgAggregateOutputType | null
    _sum: FT_MasterLookupSumAggregateOutputType | null
    _min: FT_MasterLookupMinAggregateOutputType | null
    _max: FT_MasterLookupMaxAggregateOutputType | null
  }

  export type FT_MasterLookupAvgAggregateOutputType = {
    Id: number | null
    isActive: number | null
    createdBy: number | null
    modifiedBy: number | null
  }

  export type FT_MasterLookupSumAggregateOutputType = {
    Id: number | null
    isActive: number | null
    createdBy: number | null
    modifiedBy: number | null
  }

  export type FT_MasterLookupMinAggregateOutputType = {
    Id: number | null
    value: string | null
    description_AR: string | null
    description_EN: string | null
    isActive: number | null
    createdBy: number | null
    createdDate: Date | null
    modifiedBy: number | null
    modifiedDate: Date | null
  }

  export type FT_MasterLookupMaxAggregateOutputType = {
    Id: number | null
    value: string | null
    description_AR: string | null
    description_EN: string | null
    isActive: number | null
    createdBy: number | null
    createdDate: Date | null
    modifiedBy: number | null
    modifiedDate: Date | null
  }

  export type FT_MasterLookupCountAggregateOutputType = {
    Id: number
    value: number
    description_AR: number
    description_EN: number
    isActive: number
    createdBy: number
    createdDate: number
    modifiedBy: number
    modifiedDate: number
    _all: number
  }


  export type FT_MasterLookupAvgAggregateInputType = {
    Id?: true
    isActive?: true
    createdBy?: true
    modifiedBy?: true
  }

  export type FT_MasterLookupSumAggregateInputType = {
    Id?: true
    isActive?: true
    createdBy?: true
    modifiedBy?: true
  }

  export type FT_MasterLookupMinAggregateInputType = {
    Id?: true
    value?: true
    description_AR?: true
    description_EN?: true
    isActive?: true
    createdBy?: true
    createdDate?: true
    modifiedBy?: true
    modifiedDate?: true
  }

  export type FT_MasterLookupMaxAggregateInputType = {
    Id?: true
    value?: true
    description_AR?: true
    description_EN?: true
    isActive?: true
    createdBy?: true
    createdDate?: true
    modifiedBy?: true
    modifiedDate?: true
  }

  export type FT_MasterLookupCountAggregateInputType = {
    Id?: true
    value?: true
    description_AR?: true
    description_EN?: true
    isActive?: true
    createdBy?: true
    createdDate?: true
    modifiedBy?: true
    modifiedDate?: true
    _all?: true
  }

  export type FT_MasterLookupAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FT_MasterLookup to aggregate.
     */
    where?: FT_MasterLookupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FT_MasterLookups to fetch.
     */
    orderBy?: FT_MasterLookupOrderByWithRelationInput | FT_MasterLookupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FT_MasterLookupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FT_MasterLookups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FT_MasterLookups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FT_MasterLookups
    **/
    _count?: true | FT_MasterLookupCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FT_MasterLookupAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FT_MasterLookupSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FT_MasterLookupMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FT_MasterLookupMaxAggregateInputType
  }

  export type GetFT_MasterLookupAggregateType<T extends FT_MasterLookupAggregateArgs> = {
        [P in keyof T & keyof AggregateFT_MasterLookup]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFT_MasterLookup[P]>
      : GetScalarType<T[P], AggregateFT_MasterLookup[P]>
  }




  export type FT_MasterLookupGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FT_MasterLookupWhereInput
    orderBy?: FT_MasterLookupOrderByWithAggregationInput | FT_MasterLookupOrderByWithAggregationInput[]
    by: FT_MasterLookupScalarFieldEnum[] | FT_MasterLookupScalarFieldEnum
    having?: FT_MasterLookupScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FT_MasterLookupCountAggregateInputType | true
    _avg?: FT_MasterLookupAvgAggregateInputType
    _sum?: FT_MasterLookupSumAggregateInputType
    _min?: FT_MasterLookupMinAggregateInputType
    _max?: FT_MasterLookupMaxAggregateInputType
  }

  export type FT_MasterLookupGroupByOutputType = {
    Id: number
    value: string
    description_AR: string
    description_EN: string
    isActive: number
    createdBy: number
    createdDate: Date
    modifiedBy: number | null
    modifiedDate: Date | null
    _count: FT_MasterLookupCountAggregateOutputType | null
    _avg: FT_MasterLookupAvgAggregateOutputType | null
    _sum: FT_MasterLookupSumAggregateOutputType | null
    _min: FT_MasterLookupMinAggregateOutputType | null
    _max: FT_MasterLookupMaxAggregateOutputType | null
  }

  type GetFT_MasterLookupGroupByPayload<T extends FT_MasterLookupGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FT_MasterLookupGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FT_MasterLookupGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FT_MasterLookupGroupByOutputType[P]>
            : GetScalarType<T[P], FT_MasterLookupGroupByOutputType[P]>
        }
      >
    >


  export type FT_MasterLookupSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    value?: boolean
    description_AR?: boolean
    description_EN?: boolean
    isActive?: boolean
    createdBy?: boolean
    createdDate?: boolean
    modifiedBy?: boolean
    modifiedDate?: boolean
  }, ExtArgs["result"]["fT_MasterLookup"]>



  export type FT_MasterLookupSelectScalar = {
    Id?: boolean
    value?: boolean
    description_AR?: boolean
    description_EN?: boolean
    isActive?: boolean
    createdBy?: boolean
    createdDate?: boolean
    modifiedBy?: boolean
    modifiedDate?: boolean
  }

  export type FT_MasterLookupOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "value" | "description_AR" | "description_EN" | "isActive" | "createdBy" | "createdDate" | "modifiedBy" | "modifiedDate", ExtArgs["result"]["fT_MasterLookup"]>

  export type $FT_MasterLookupPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FT_MasterLookup"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      Id: number
      value: string
      description_AR: string
      description_EN: string
      isActive: number
      createdBy: number
      createdDate: Date
      modifiedBy: number | null
      modifiedDate: Date | null
    }, ExtArgs["result"]["fT_MasterLookup"]>
    composites: {}
  }

  type FT_MasterLookupGetPayload<S extends boolean | null | undefined | FT_MasterLookupDefaultArgs> = $Result.GetResult<Prisma.$FT_MasterLookupPayload, S>

  type FT_MasterLookupCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FT_MasterLookupFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FT_MasterLookupCountAggregateInputType | true
    }

  export interface FT_MasterLookupDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FT_MasterLookup'], meta: { name: 'FT_MasterLookup' } }
    /**
     * Find zero or one FT_MasterLookup that matches the filter.
     * @param {FT_MasterLookupFindUniqueArgs} args - Arguments to find a FT_MasterLookup
     * @example
     * // Get one FT_MasterLookup
     * const fT_MasterLookup = await prisma.fT_MasterLookup.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FT_MasterLookupFindUniqueArgs>(args: SelectSubset<T, FT_MasterLookupFindUniqueArgs<ExtArgs>>): Prisma__FT_MasterLookupClient<$Result.GetResult<Prisma.$FT_MasterLookupPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one FT_MasterLookup that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FT_MasterLookupFindUniqueOrThrowArgs} args - Arguments to find a FT_MasterLookup
     * @example
     * // Get one FT_MasterLookup
     * const fT_MasterLookup = await prisma.fT_MasterLookup.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FT_MasterLookupFindUniqueOrThrowArgs>(args: SelectSubset<T, FT_MasterLookupFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FT_MasterLookupClient<$Result.GetResult<Prisma.$FT_MasterLookupPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FT_MasterLookup that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FT_MasterLookupFindFirstArgs} args - Arguments to find a FT_MasterLookup
     * @example
     * // Get one FT_MasterLookup
     * const fT_MasterLookup = await prisma.fT_MasterLookup.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FT_MasterLookupFindFirstArgs>(args?: SelectSubset<T, FT_MasterLookupFindFirstArgs<ExtArgs>>): Prisma__FT_MasterLookupClient<$Result.GetResult<Prisma.$FT_MasterLookupPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FT_MasterLookup that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FT_MasterLookupFindFirstOrThrowArgs} args - Arguments to find a FT_MasterLookup
     * @example
     * // Get one FT_MasterLookup
     * const fT_MasterLookup = await prisma.fT_MasterLookup.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FT_MasterLookupFindFirstOrThrowArgs>(args?: SelectSubset<T, FT_MasterLookupFindFirstOrThrowArgs<ExtArgs>>): Prisma__FT_MasterLookupClient<$Result.GetResult<Prisma.$FT_MasterLookupPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more FT_MasterLookups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FT_MasterLookupFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FT_MasterLookups
     * const fT_MasterLookups = await prisma.fT_MasterLookup.findMany()
     * 
     * // Get first 10 FT_MasterLookups
     * const fT_MasterLookups = await prisma.fT_MasterLookup.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const fT_MasterLookupWithIdOnly = await prisma.fT_MasterLookup.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends FT_MasterLookupFindManyArgs>(args?: SelectSubset<T, FT_MasterLookupFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FT_MasterLookupPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a FT_MasterLookup.
     * @param {FT_MasterLookupCreateArgs} args - Arguments to create a FT_MasterLookup.
     * @example
     * // Create one FT_MasterLookup
     * const FT_MasterLookup = await prisma.fT_MasterLookup.create({
     *   data: {
     *     // ... data to create a FT_MasterLookup
     *   }
     * })
     * 
     */
    create<T extends FT_MasterLookupCreateArgs>(args: SelectSubset<T, FT_MasterLookupCreateArgs<ExtArgs>>): Prisma__FT_MasterLookupClient<$Result.GetResult<Prisma.$FT_MasterLookupPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many FT_MasterLookups.
     * @param {FT_MasterLookupCreateManyArgs} args - Arguments to create many FT_MasterLookups.
     * @example
     * // Create many FT_MasterLookups
     * const fT_MasterLookup = await prisma.fT_MasterLookup.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FT_MasterLookupCreateManyArgs>(args?: SelectSubset<T, FT_MasterLookupCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a FT_MasterLookup.
     * @param {FT_MasterLookupDeleteArgs} args - Arguments to delete one FT_MasterLookup.
     * @example
     * // Delete one FT_MasterLookup
     * const FT_MasterLookup = await prisma.fT_MasterLookup.delete({
     *   where: {
     *     // ... filter to delete one FT_MasterLookup
     *   }
     * })
     * 
     */
    delete<T extends FT_MasterLookupDeleteArgs>(args: SelectSubset<T, FT_MasterLookupDeleteArgs<ExtArgs>>): Prisma__FT_MasterLookupClient<$Result.GetResult<Prisma.$FT_MasterLookupPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one FT_MasterLookup.
     * @param {FT_MasterLookupUpdateArgs} args - Arguments to update one FT_MasterLookup.
     * @example
     * // Update one FT_MasterLookup
     * const fT_MasterLookup = await prisma.fT_MasterLookup.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FT_MasterLookupUpdateArgs>(args: SelectSubset<T, FT_MasterLookupUpdateArgs<ExtArgs>>): Prisma__FT_MasterLookupClient<$Result.GetResult<Prisma.$FT_MasterLookupPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more FT_MasterLookups.
     * @param {FT_MasterLookupDeleteManyArgs} args - Arguments to filter FT_MasterLookups to delete.
     * @example
     * // Delete a few FT_MasterLookups
     * const { count } = await prisma.fT_MasterLookup.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FT_MasterLookupDeleteManyArgs>(args?: SelectSubset<T, FT_MasterLookupDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FT_MasterLookups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FT_MasterLookupUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FT_MasterLookups
     * const fT_MasterLookup = await prisma.fT_MasterLookup.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FT_MasterLookupUpdateManyArgs>(args: SelectSubset<T, FT_MasterLookupUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one FT_MasterLookup.
     * @param {FT_MasterLookupUpsertArgs} args - Arguments to update or create a FT_MasterLookup.
     * @example
     * // Update or create a FT_MasterLookup
     * const fT_MasterLookup = await prisma.fT_MasterLookup.upsert({
     *   create: {
     *     // ... data to create a FT_MasterLookup
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FT_MasterLookup we want to update
     *   }
     * })
     */
    upsert<T extends FT_MasterLookupUpsertArgs>(args: SelectSubset<T, FT_MasterLookupUpsertArgs<ExtArgs>>): Prisma__FT_MasterLookupClient<$Result.GetResult<Prisma.$FT_MasterLookupPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of FT_MasterLookups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FT_MasterLookupCountArgs} args - Arguments to filter FT_MasterLookups to count.
     * @example
     * // Count the number of FT_MasterLookups
     * const count = await prisma.fT_MasterLookup.count({
     *   where: {
     *     // ... the filter for the FT_MasterLookups we want to count
     *   }
     * })
    **/
    count<T extends FT_MasterLookupCountArgs>(
      args?: Subset<T, FT_MasterLookupCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FT_MasterLookupCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FT_MasterLookup.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FT_MasterLookupAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FT_MasterLookupAggregateArgs>(args: Subset<T, FT_MasterLookupAggregateArgs>): Prisma.PrismaPromise<GetFT_MasterLookupAggregateType<T>>

    /**
     * Group by FT_MasterLookup.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FT_MasterLookupGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FT_MasterLookupGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FT_MasterLookupGroupByArgs['orderBy'] }
        : { orderBy?: FT_MasterLookupGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FT_MasterLookupGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFT_MasterLookupGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FT_MasterLookup model
   */
  readonly fields: FT_MasterLookupFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FT_MasterLookup.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FT_MasterLookupClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FT_MasterLookup model
   */
  interface FT_MasterLookupFieldRefs {
    readonly Id: FieldRef<"FT_MasterLookup", 'Int'>
    readonly value: FieldRef<"FT_MasterLookup", 'String'>
    readonly description_AR: FieldRef<"FT_MasterLookup", 'String'>
    readonly description_EN: FieldRef<"FT_MasterLookup", 'String'>
    readonly isActive: FieldRef<"FT_MasterLookup", 'Int'>
    readonly createdBy: FieldRef<"FT_MasterLookup", 'Int'>
    readonly createdDate: FieldRef<"FT_MasterLookup", 'DateTime'>
    readonly modifiedBy: FieldRef<"FT_MasterLookup", 'Int'>
    readonly modifiedDate: FieldRef<"FT_MasterLookup", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * FT_MasterLookup findUnique
   */
  export type FT_MasterLookupFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FT_MasterLookup
     */
    select?: FT_MasterLookupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FT_MasterLookup
     */
    omit?: FT_MasterLookupOmit<ExtArgs> | null
    /**
     * Filter, which FT_MasterLookup to fetch.
     */
    where: FT_MasterLookupWhereUniqueInput
  }

  /**
   * FT_MasterLookup findUniqueOrThrow
   */
  export type FT_MasterLookupFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FT_MasterLookup
     */
    select?: FT_MasterLookupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FT_MasterLookup
     */
    omit?: FT_MasterLookupOmit<ExtArgs> | null
    /**
     * Filter, which FT_MasterLookup to fetch.
     */
    where: FT_MasterLookupWhereUniqueInput
  }

  /**
   * FT_MasterLookup findFirst
   */
  export type FT_MasterLookupFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FT_MasterLookup
     */
    select?: FT_MasterLookupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FT_MasterLookup
     */
    omit?: FT_MasterLookupOmit<ExtArgs> | null
    /**
     * Filter, which FT_MasterLookup to fetch.
     */
    where?: FT_MasterLookupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FT_MasterLookups to fetch.
     */
    orderBy?: FT_MasterLookupOrderByWithRelationInput | FT_MasterLookupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FT_MasterLookups.
     */
    cursor?: FT_MasterLookupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FT_MasterLookups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FT_MasterLookups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FT_MasterLookups.
     */
    distinct?: FT_MasterLookupScalarFieldEnum | FT_MasterLookupScalarFieldEnum[]
  }

  /**
   * FT_MasterLookup findFirstOrThrow
   */
  export type FT_MasterLookupFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FT_MasterLookup
     */
    select?: FT_MasterLookupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FT_MasterLookup
     */
    omit?: FT_MasterLookupOmit<ExtArgs> | null
    /**
     * Filter, which FT_MasterLookup to fetch.
     */
    where?: FT_MasterLookupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FT_MasterLookups to fetch.
     */
    orderBy?: FT_MasterLookupOrderByWithRelationInput | FT_MasterLookupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FT_MasterLookups.
     */
    cursor?: FT_MasterLookupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FT_MasterLookups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FT_MasterLookups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FT_MasterLookups.
     */
    distinct?: FT_MasterLookupScalarFieldEnum | FT_MasterLookupScalarFieldEnum[]
  }

  /**
   * FT_MasterLookup findMany
   */
  export type FT_MasterLookupFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FT_MasterLookup
     */
    select?: FT_MasterLookupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FT_MasterLookup
     */
    omit?: FT_MasterLookupOmit<ExtArgs> | null
    /**
     * Filter, which FT_MasterLookups to fetch.
     */
    where?: FT_MasterLookupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FT_MasterLookups to fetch.
     */
    orderBy?: FT_MasterLookupOrderByWithRelationInput | FT_MasterLookupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FT_MasterLookups.
     */
    cursor?: FT_MasterLookupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FT_MasterLookups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FT_MasterLookups.
     */
    skip?: number
    distinct?: FT_MasterLookupScalarFieldEnum | FT_MasterLookupScalarFieldEnum[]
  }

  /**
   * FT_MasterLookup create
   */
  export type FT_MasterLookupCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FT_MasterLookup
     */
    select?: FT_MasterLookupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FT_MasterLookup
     */
    omit?: FT_MasterLookupOmit<ExtArgs> | null
    /**
     * The data needed to create a FT_MasterLookup.
     */
    data: XOR<FT_MasterLookupCreateInput, FT_MasterLookupUncheckedCreateInput>
  }

  /**
   * FT_MasterLookup createMany
   */
  export type FT_MasterLookupCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FT_MasterLookups.
     */
    data: FT_MasterLookupCreateManyInput | FT_MasterLookupCreateManyInput[]
  }

  /**
   * FT_MasterLookup update
   */
  export type FT_MasterLookupUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FT_MasterLookup
     */
    select?: FT_MasterLookupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FT_MasterLookup
     */
    omit?: FT_MasterLookupOmit<ExtArgs> | null
    /**
     * The data needed to update a FT_MasterLookup.
     */
    data: XOR<FT_MasterLookupUpdateInput, FT_MasterLookupUncheckedUpdateInput>
    /**
     * Choose, which FT_MasterLookup to update.
     */
    where: FT_MasterLookupWhereUniqueInput
  }

  /**
   * FT_MasterLookup updateMany
   */
  export type FT_MasterLookupUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FT_MasterLookups.
     */
    data: XOR<FT_MasterLookupUpdateManyMutationInput, FT_MasterLookupUncheckedUpdateManyInput>
    /**
     * Filter which FT_MasterLookups to update
     */
    where?: FT_MasterLookupWhereInput
    /**
     * Limit how many FT_MasterLookups to update.
     */
    limit?: number
  }

  /**
   * FT_MasterLookup upsert
   */
  export type FT_MasterLookupUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FT_MasterLookup
     */
    select?: FT_MasterLookupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FT_MasterLookup
     */
    omit?: FT_MasterLookupOmit<ExtArgs> | null
    /**
     * The filter to search for the FT_MasterLookup to update in case it exists.
     */
    where: FT_MasterLookupWhereUniqueInput
    /**
     * In case the FT_MasterLookup found by the `where` argument doesn't exist, create a new FT_MasterLookup with this data.
     */
    create: XOR<FT_MasterLookupCreateInput, FT_MasterLookupUncheckedCreateInput>
    /**
     * In case the FT_MasterLookup was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FT_MasterLookupUpdateInput, FT_MasterLookupUncheckedUpdateInput>
  }

  /**
   * FT_MasterLookup delete
   */
  export type FT_MasterLookupDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FT_MasterLookup
     */
    select?: FT_MasterLookupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FT_MasterLookup
     */
    omit?: FT_MasterLookupOmit<ExtArgs> | null
    /**
     * Filter which FT_MasterLookup to delete.
     */
    where: FT_MasterLookupWhereUniqueInput
  }

  /**
   * FT_MasterLookup deleteMany
   */
  export type FT_MasterLookupDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FT_MasterLookups to delete
     */
    where?: FT_MasterLookupWhereInput
    /**
     * Limit how many FT_MasterLookups to delete.
     */
    limit?: number
  }

  /**
   * FT_MasterLookup without action
   */
  export type FT_MasterLookupDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FT_MasterLookup
     */
    select?: FT_MasterLookupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FT_MasterLookup
     */
    omit?: FT_MasterLookupOmit<ExtArgs> | null
  }


  /**
   * Model FT_Projects
   */

  export type AggregateFT_Projects = {
    _count: FT_ProjectsCountAggregateOutputType | null
    _avg: FT_ProjectsAvgAggregateOutputType | null
    _sum: FT_ProjectsSumAggregateOutputType | null
    _min: FT_ProjectsMinAggregateOutputType | null
    _max: FT_ProjectsMaxAggregateOutputType | null
  }

  export type FT_ProjectsAvgAggregateOutputType = {
    clientId: number | null
    ProjectManager: number | null
    status: number | null
    billingType: number | null
    totalContract: Decimal | null
    approvedBudget: Decimal | null
    allocatedBudget: Decimal | null
    billingRateTimePeriod: number | null
    createdBy: number | null
  }

  export type FT_ProjectsSumAggregateOutputType = {
    clientId: number | null
    ProjectManager: number | null
    status: number | null
    billingType: number | null
    totalContract: Decimal | null
    approvedBudget: Decimal | null
    allocatedBudget: Decimal | null
    billingRateTimePeriod: number | null
    createdBy: number | null
  }

  export type FT_ProjectsMinAggregateOutputType = {
    id: string | null
    name: string | null
    code: string | null
    clientId: number | null
    startDate: Date | null
    endDate: Date | null
    ProjectManager: number | null
    status: number | null
    billingType: number | null
    totalContract: Decimal | null
    approvedBudget: Decimal | null
    allocatedBudget: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
    billingRateTimePeriod: number | null
    createdBy: number | null
  }

  export type FT_ProjectsMaxAggregateOutputType = {
    id: string | null
    name: string | null
    code: string | null
    clientId: number | null
    startDate: Date | null
    endDate: Date | null
    ProjectManager: number | null
    status: number | null
    billingType: number | null
    totalContract: Decimal | null
    approvedBudget: Decimal | null
    allocatedBudget: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
    billingRateTimePeriod: number | null
    createdBy: number | null
  }

  export type FT_ProjectsCountAggregateOutputType = {
    id: number
    name: number
    code: number
    clientId: number
    startDate: number
    endDate: number
    ProjectManager: number
    status: number
    billingType: number
    totalContract: number
    approvedBudget: number
    allocatedBudget: number
    createdAt: number
    updatedAt: number
    billingRateTimePeriod: number
    createdBy: number
    _all: number
  }


  export type FT_ProjectsAvgAggregateInputType = {
    clientId?: true
    ProjectManager?: true
    status?: true
    billingType?: true
    totalContract?: true
    approvedBudget?: true
    allocatedBudget?: true
    billingRateTimePeriod?: true
    createdBy?: true
  }

  export type FT_ProjectsSumAggregateInputType = {
    clientId?: true
    ProjectManager?: true
    status?: true
    billingType?: true
    totalContract?: true
    approvedBudget?: true
    allocatedBudget?: true
    billingRateTimePeriod?: true
    createdBy?: true
  }

  export type FT_ProjectsMinAggregateInputType = {
    id?: true
    name?: true
    code?: true
    clientId?: true
    startDate?: true
    endDate?: true
    ProjectManager?: true
    status?: true
    billingType?: true
    totalContract?: true
    approvedBudget?: true
    allocatedBudget?: true
    createdAt?: true
    updatedAt?: true
    billingRateTimePeriod?: true
    createdBy?: true
  }

  export type FT_ProjectsMaxAggregateInputType = {
    id?: true
    name?: true
    code?: true
    clientId?: true
    startDate?: true
    endDate?: true
    ProjectManager?: true
    status?: true
    billingType?: true
    totalContract?: true
    approvedBudget?: true
    allocatedBudget?: true
    createdAt?: true
    updatedAt?: true
    billingRateTimePeriod?: true
    createdBy?: true
  }

  export type FT_ProjectsCountAggregateInputType = {
    id?: true
    name?: true
    code?: true
    clientId?: true
    startDate?: true
    endDate?: true
    ProjectManager?: true
    status?: true
    billingType?: true
    totalContract?: true
    approvedBudget?: true
    allocatedBudget?: true
    createdAt?: true
    updatedAt?: true
    billingRateTimePeriod?: true
    createdBy?: true
    _all?: true
  }

  export type FT_ProjectsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FT_Projects to aggregate.
     */
    where?: FT_ProjectsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FT_Projects to fetch.
     */
    orderBy?: FT_ProjectsOrderByWithRelationInput | FT_ProjectsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FT_ProjectsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FT_Projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FT_Projects.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FT_Projects
    **/
    _count?: true | FT_ProjectsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FT_ProjectsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FT_ProjectsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FT_ProjectsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FT_ProjectsMaxAggregateInputType
  }

  export type GetFT_ProjectsAggregateType<T extends FT_ProjectsAggregateArgs> = {
        [P in keyof T & keyof AggregateFT_Projects]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFT_Projects[P]>
      : GetScalarType<T[P], AggregateFT_Projects[P]>
  }




  export type FT_ProjectsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FT_ProjectsWhereInput
    orderBy?: FT_ProjectsOrderByWithAggregationInput | FT_ProjectsOrderByWithAggregationInput[]
    by: FT_ProjectsScalarFieldEnum[] | FT_ProjectsScalarFieldEnum
    having?: FT_ProjectsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FT_ProjectsCountAggregateInputType | true
    _avg?: FT_ProjectsAvgAggregateInputType
    _sum?: FT_ProjectsSumAggregateInputType
    _min?: FT_ProjectsMinAggregateInputType
    _max?: FT_ProjectsMaxAggregateInputType
  }

  export type FT_ProjectsGroupByOutputType = {
    id: string
    name: string
    code: string
    clientId: number
    startDate: Date
    endDate: Date
    ProjectManager: number
    status: number
    billingType: number
    totalContract: Decimal
    approvedBudget: Decimal
    allocatedBudget: Decimal
    createdAt: Date
    updatedAt: Date
    billingRateTimePeriod: number
    createdBy: number
    _count: FT_ProjectsCountAggregateOutputType | null
    _avg: FT_ProjectsAvgAggregateOutputType | null
    _sum: FT_ProjectsSumAggregateOutputType | null
    _min: FT_ProjectsMinAggregateOutputType | null
    _max: FT_ProjectsMaxAggregateOutputType | null
  }

  type GetFT_ProjectsGroupByPayload<T extends FT_ProjectsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FT_ProjectsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FT_ProjectsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FT_ProjectsGroupByOutputType[P]>
            : GetScalarType<T[P], FT_ProjectsGroupByOutputType[P]>
        }
      >
    >


  export type FT_ProjectsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    code?: boolean
    clientId?: boolean
    startDate?: boolean
    endDate?: boolean
    ProjectManager?: boolean
    status?: boolean
    billingType?: boolean
    totalContract?: boolean
    approvedBudget?: boolean
    allocatedBudget?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    billingRateTimePeriod?: boolean
    createdBy?: boolean
  }, ExtArgs["result"]["fT_Projects"]>



  export type FT_ProjectsSelectScalar = {
    id?: boolean
    name?: boolean
    code?: boolean
    clientId?: boolean
    startDate?: boolean
    endDate?: boolean
    ProjectManager?: boolean
    status?: boolean
    billingType?: boolean
    totalContract?: boolean
    approvedBudget?: boolean
    allocatedBudget?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    billingRateTimePeriod?: boolean
    createdBy?: boolean
  }

  export type FT_ProjectsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "code" | "clientId" | "startDate" | "endDate" | "ProjectManager" | "status" | "billingType" | "totalContract" | "approvedBudget" | "allocatedBudget" | "createdAt" | "updatedAt" | "billingRateTimePeriod" | "createdBy", ExtArgs["result"]["fT_Projects"]>

  export type $FT_ProjectsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FT_Projects"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      code: string
      clientId: number
      startDate: Date
      endDate: Date
      ProjectManager: number
      status: number
      billingType: number
      totalContract: Prisma.Decimal
      approvedBudget: Prisma.Decimal
      allocatedBudget: Prisma.Decimal
      createdAt: Date
      updatedAt: Date
      billingRateTimePeriod: number
      createdBy: number
    }, ExtArgs["result"]["fT_Projects"]>
    composites: {}
  }

  type FT_ProjectsGetPayload<S extends boolean | null | undefined | FT_ProjectsDefaultArgs> = $Result.GetResult<Prisma.$FT_ProjectsPayload, S>

  type FT_ProjectsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FT_ProjectsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FT_ProjectsCountAggregateInputType | true
    }

  export interface FT_ProjectsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FT_Projects'], meta: { name: 'FT_Projects' } }
    /**
     * Find zero or one FT_Projects that matches the filter.
     * @param {FT_ProjectsFindUniqueArgs} args - Arguments to find a FT_Projects
     * @example
     * // Get one FT_Projects
     * const fT_Projects = await prisma.fT_Projects.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FT_ProjectsFindUniqueArgs>(args: SelectSubset<T, FT_ProjectsFindUniqueArgs<ExtArgs>>): Prisma__FT_ProjectsClient<$Result.GetResult<Prisma.$FT_ProjectsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one FT_Projects that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FT_ProjectsFindUniqueOrThrowArgs} args - Arguments to find a FT_Projects
     * @example
     * // Get one FT_Projects
     * const fT_Projects = await prisma.fT_Projects.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FT_ProjectsFindUniqueOrThrowArgs>(args: SelectSubset<T, FT_ProjectsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FT_ProjectsClient<$Result.GetResult<Prisma.$FT_ProjectsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FT_Projects that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FT_ProjectsFindFirstArgs} args - Arguments to find a FT_Projects
     * @example
     * // Get one FT_Projects
     * const fT_Projects = await prisma.fT_Projects.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FT_ProjectsFindFirstArgs>(args?: SelectSubset<T, FT_ProjectsFindFirstArgs<ExtArgs>>): Prisma__FT_ProjectsClient<$Result.GetResult<Prisma.$FT_ProjectsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FT_Projects that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FT_ProjectsFindFirstOrThrowArgs} args - Arguments to find a FT_Projects
     * @example
     * // Get one FT_Projects
     * const fT_Projects = await prisma.fT_Projects.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FT_ProjectsFindFirstOrThrowArgs>(args?: SelectSubset<T, FT_ProjectsFindFirstOrThrowArgs<ExtArgs>>): Prisma__FT_ProjectsClient<$Result.GetResult<Prisma.$FT_ProjectsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more FT_Projects that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FT_ProjectsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FT_Projects
     * const fT_Projects = await prisma.fT_Projects.findMany()
     * 
     * // Get first 10 FT_Projects
     * const fT_Projects = await prisma.fT_Projects.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const fT_ProjectsWithIdOnly = await prisma.fT_Projects.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FT_ProjectsFindManyArgs>(args?: SelectSubset<T, FT_ProjectsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FT_ProjectsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a FT_Projects.
     * @param {FT_ProjectsCreateArgs} args - Arguments to create a FT_Projects.
     * @example
     * // Create one FT_Projects
     * const FT_Projects = await prisma.fT_Projects.create({
     *   data: {
     *     // ... data to create a FT_Projects
     *   }
     * })
     * 
     */
    create<T extends FT_ProjectsCreateArgs>(args: SelectSubset<T, FT_ProjectsCreateArgs<ExtArgs>>): Prisma__FT_ProjectsClient<$Result.GetResult<Prisma.$FT_ProjectsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many FT_Projects.
     * @param {FT_ProjectsCreateManyArgs} args - Arguments to create many FT_Projects.
     * @example
     * // Create many FT_Projects
     * const fT_Projects = await prisma.fT_Projects.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FT_ProjectsCreateManyArgs>(args?: SelectSubset<T, FT_ProjectsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a FT_Projects.
     * @param {FT_ProjectsDeleteArgs} args - Arguments to delete one FT_Projects.
     * @example
     * // Delete one FT_Projects
     * const FT_Projects = await prisma.fT_Projects.delete({
     *   where: {
     *     // ... filter to delete one FT_Projects
     *   }
     * })
     * 
     */
    delete<T extends FT_ProjectsDeleteArgs>(args: SelectSubset<T, FT_ProjectsDeleteArgs<ExtArgs>>): Prisma__FT_ProjectsClient<$Result.GetResult<Prisma.$FT_ProjectsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one FT_Projects.
     * @param {FT_ProjectsUpdateArgs} args - Arguments to update one FT_Projects.
     * @example
     * // Update one FT_Projects
     * const fT_Projects = await prisma.fT_Projects.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FT_ProjectsUpdateArgs>(args: SelectSubset<T, FT_ProjectsUpdateArgs<ExtArgs>>): Prisma__FT_ProjectsClient<$Result.GetResult<Prisma.$FT_ProjectsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more FT_Projects.
     * @param {FT_ProjectsDeleteManyArgs} args - Arguments to filter FT_Projects to delete.
     * @example
     * // Delete a few FT_Projects
     * const { count } = await prisma.fT_Projects.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FT_ProjectsDeleteManyArgs>(args?: SelectSubset<T, FT_ProjectsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FT_Projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FT_ProjectsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FT_Projects
     * const fT_Projects = await prisma.fT_Projects.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FT_ProjectsUpdateManyArgs>(args: SelectSubset<T, FT_ProjectsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one FT_Projects.
     * @param {FT_ProjectsUpsertArgs} args - Arguments to update or create a FT_Projects.
     * @example
     * // Update or create a FT_Projects
     * const fT_Projects = await prisma.fT_Projects.upsert({
     *   create: {
     *     // ... data to create a FT_Projects
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FT_Projects we want to update
     *   }
     * })
     */
    upsert<T extends FT_ProjectsUpsertArgs>(args: SelectSubset<T, FT_ProjectsUpsertArgs<ExtArgs>>): Prisma__FT_ProjectsClient<$Result.GetResult<Prisma.$FT_ProjectsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of FT_Projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FT_ProjectsCountArgs} args - Arguments to filter FT_Projects to count.
     * @example
     * // Count the number of FT_Projects
     * const count = await prisma.fT_Projects.count({
     *   where: {
     *     // ... the filter for the FT_Projects we want to count
     *   }
     * })
    **/
    count<T extends FT_ProjectsCountArgs>(
      args?: Subset<T, FT_ProjectsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FT_ProjectsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FT_Projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FT_ProjectsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FT_ProjectsAggregateArgs>(args: Subset<T, FT_ProjectsAggregateArgs>): Prisma.PrismaPromise<GetFT_ProjectsAggregateType<T>>

    /**
     * Group by FT_Projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FT_ProjectsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FT_ProjectsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FT_ProjectsGroupByArgs['orderBy'] }
        : { orderBy?: FT_ProjectsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FT_ProjectsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFT_ProjectsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FT_Projects model
   */
  readonly fields: FT_ProjectsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FT_Projects.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FT_ProjectsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FT_Projects model
   */
  interface FT_ProjectsFieldRefs {
    readonly id: FieldRef<"FT_Projects", 'String'>
    readonly name: FieldRef<"FT_Projects", 'String'>
    readonly code: FieldRef<"FT_Projects", 'String'>
    readonly clientId: FieldRef<"FT_Projects", 'Int'>
    readonly startDate: FieldRef<"FT_Projects", 'DateTime'>
    readonly endDate: FieldRef<"FT_Projects", 'DateTime'>
    readonly ProjectManager: FieldRef<"FT_Projects", 'Int'>
    readonly status: FieldRef<"FT_Projects", 'Int'>
    readonly billingType: FieldRef<"FT_Projects", 'Int'>
    readonly totalContract: FieldRef<"FT_Projects", 'Decimal'>
    readonly approvedBudget: FieldRef<"FT_Projects", 'Decimal'>
    readonly allocatedBudget: FieldRef<"FT_Projects", 'Decimal'>
    readonly createdAt: FieldRef<"FT_Projects", 'DateTime'>
    readonly updatedAt: FieldRef<"FT_Projects", 'DateTime'>
    readonly billingRateTimePeriod: FieldRef<"FT_Projects", 'Int'>
    readonly createdBy: FieldRef<"FT_Projects", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * FT_Projects findUnique
   */
  export type FT_ProjectsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FT_Projects
     */
    select?: FT_ProjectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FT_Projects
     */
    omit?: FT_ProjectsOmit<ExtArgs> | null
    /**
     * Filter, which FT_Projects to fetch.
     */
    where: FT_ProjectsWhereUniqueInput
  }

  /**
   * FT_Projects findUniqueOrThrow
   */
  export type FT_ProjectsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FT_Projects
     */
    select?: FT_ProjectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FT_Projects
     */
    omit?: FT_ProjectsOmit<ExtArgs> | null
    /**
     * Filter, which FT_Projects to fetch.
     */
    where: FT_ProjectsWhereUniqueInput
  }

  /**
   * FT_Projects findFirst
   */
  export type FT_ProjectsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FT_Projects
     */
    select?: FT_ProjectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FT_Projects
     */
    omit?: FT_ProjectsOmit<ExtArgs> | null
    /**
     * Filter, which FT_Projects to fetch.
     */
    where?: FT_ProjectsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FT_Projects to fetch.
     */
    orderBy?: FT_ProjectsOrderByWithRelationInput | FT_ProjectsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FT_Projects.
     */
    cursor?: FT_ProjectsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FT_Projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FT_Projects.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FT_Projects.
     */
    distinct?: FT_ProjectsScalarFieldEnum | FT_ProjectsScalarFieldEnum[]
  }

  /**
   * FT_Projects findFirstOrThrow
   */
  export type FT_ProjectsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FT_Projects
     */
    select?: FT_ProjectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FT_Projects
     */
    omit?: FT_ProjectsOmit<ExtArgs> | null
    /**
     * Filter, which FT_Projects to fetch.
     */
    where?: FT_ProjectsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FT_Projects to fetch.
     */
    orderBy?: FT_ProjectsOrderByWithRelationInput | FT_ProjectsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FT_Projects.
     */
    cursor?: FT_ProjectsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FT_Projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FT_Projects.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FT_Projects.
     */
    distinct?: FT_ProjectsScalarFieldEnum | FT_ProjectsScalarFieldEnum[]
  }

  /**
   * FT_Projects findMany
   */
  export type FT_ProjectsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FT_Projects
     */
    select?: FT_ProjectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FT_Projects
     */
    omit?: FT_ProjectsOmit<ExtArgs> | null
    /**
     * Filter, which FT_Projects to fetch.
     */
    where?: FT_ProjectsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FT_Projects to fetch.
     */
    orderBy?: FT_ProjectsOrderByWithRelationInput | FT_ProjectsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FT_Projects.
     */
    cursor?: FT_ProjectsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FT_Projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FT_Projects.
     */
    skip?: number
    distinct?: FT_ProjectsScalarFieldEnum | FT_ProjectsScalarFieldEnum[]
  }

  /**
   * FT_Projects create
   */
  export type FT_ProjectsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FT_Projects
     */
    select?: FT_ProjectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FT_Projects
     */
    omit?: FT_ProjectsOmit<ExtArgs> | null
    /**
     * The data needed to create a FT_Projects.
     */
    data: XOR<FT_ProjectsCreateInput, FT_ProjectsUncheckedCreateInput>
  }

  /**
   * FT_Projects createMany
   */
  export type FT_ProjectsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FT_Projects.
     */
    data: FT_ProjectsCreateManyInput | FT_ProjectsCreateManyInput[]
  }

  /**
   * FT_Projects update
   */
  export type FT_ProjectsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FT_Projects
     */
    select?: FT_ProjectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FT_Projects
     */
    omit?: FT_ProjectsOmit<ExtArgs> | null
    /**
     * The data needed to update a FT_Projects.
     */
    data: XOR<FT_ProjectsUpdateInput, FT_ProjectsUncheckedUpdateInput>
    /**
     * Choose, which FT_Projects to update.
     */
    where: FT_ProjectsWhereUniqueInput
  }

  /**
   * FT_Projects updateMany
   */
  export type FT_ProjectsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FT_Projects.
     */
    data: XOR<FT_ProjectsUpdateManyMutationInput, FT_ProjectsUncheckedUpdateManyInput>
    /**
     * Filter which FT_Projects to update
     */
    where?: FT_ProjectsWhereInput
    /**
     * Limit how many FT_Projects to update.
     */
    limit?: number
  }

  /**
   * FT_Projects upsert
   */
  export type FT_ProjectsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FT_Projects
     */
    select?: FT_ProjectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FT_Projects
     */
    omit?: FT_ProjectsOmit<ExtArgs> | null
    /**
     * The filter to search for the FT_Projects to update in case it exists.
     */
    where: FT_ProjectsWhereUniqueInput
    /**
     * In case the FT_Projects found by the `where` argument doesn't exist, create a new FT_Projects with this data.
     */
    create: XOR<FT_ProjectsCreateInput, FT_ProjectsUncheckedCreateInput>
    /**
     * In case the FT_Projects was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FT_ProjectsUpdateInput, FT_ProjectsUncheckedUpdateInput>
  }

  /**
   * FT_Projects delete
   */
  export type FT_ProjectsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FT_Projects
     */
    select?: FT_ProjectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FT_Projects
     */
    omit?: FT_ProjectsOmit<ExtArgs> | null
    /**
     * Filter which FT_Projects to delete.
     */
    where: FT_ProjectsWhereUniqueInput
  }

  /**
   * FT_Projects deleteMany
   */
  export type FT_ProjectsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FT_Projects to delete
     */
    where?: FT_ProjectsWhereInput
    /**
     * Limit how many FT_Projects to delete.
     */
    limit?: number
  }

  /**
   * FT_Projects without action
   */
  export type FT_ProjectsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FT_Projects
     */
    select?: FT_ProjectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FT_Projects
     */
    omit?: FT_ProjectsOmit<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable',
    Snapshot: 'Snapshot'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const FT_DetailedLookupScalarFieldEnum: {
    Id: 'Id',
    Master_ID: 'Master_ID',
    Code: 'Code',
    Value_AR: 'Value_AR',
    Value_EN: 'Value_EN',
    isActive: 'isActive',
    createdBy: 'createdBy',
    createdDate: 'createdDate',
    modifiedBy: 'modifiedBy',
    modifiedDate: 'modifiedDate',
    comments: 'comments'
  };

  export type FT_DetailedLookupScalarFieldEnum = (typeof FT_DetailedLookupScalarFieldEnum)[keyof typeof FT_DetailedLookupScalarFieldEnum]


  export const FT_MasterLookupScalarFieldEnum: {
    Id: 'Id',
    value: 'value',
    description_AR: 'description_AR',
    description_EN: 'description_EN',
    isActive: 'isActive',
    createdBy: 'createdBy',
    createdDate: 'createdDate',
    modifiedBy: 'modifiedBy',
    modifiedDate: 'modifiedDate'
  };

  export type FT_MasterLookupScalarFieldEnum = (typeof FT_MasterLookupScalarFieldEnum)[keyof typeof FT_MasterLookupScalarFieldEnum]


  export const FT_ProjectsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    code: 'code',
    clientId: 'clientId',
    startDate: 'startDate',
    endDate: 'endDate',
    ProjectManager: 'ProjectManager',
    status: 'status',
    billingType: 'billingType',
    totalContract: 'totalContract',
    approvedBudget: 'approvedBudget',
    allocatedBudget: 'allocatedBudget',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    billingRateTimePeriod: 'billingRateTimePeriod',
    createdBy: 'createdBy'
  };

  export type FT_ProjectsScalarFieldEnum = (typeof FT_ProjectsScalarFieldEnum)[keyof typeof FT_ProjectsScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type FT_DetailedLookupWhereInput = {
    AND?: FT_DetailedLookupWhereInput | FT_DetailedLookupWhereInput[]
    OR?: FT_DetailedLookupWhereInput[]
    NOT?: FT_DetailedLookupWhereInput | FT_DetailedLookupWhereInput[]
    Id?: IntFilter<"FT_DetailedLookup"> | number
    Master_ID?: IntFilter<"FT_DetailedLookup"> | number
    Code?: StringFilter<"FT_DetailedLookup"> | string
    Value_AR?: StringFilter<"FT_DetailedLookup"> | string
    Value_EN?: StringFilter<"FT_DetailedLookup"> | string
    isActive?: IntFilter<"FT_DetailedLookup"> | number
    createdBy?: IntFilter<"FT_DetailedLookup"> | number
    createdDate?: DateTimeFilter<"FT_DetailedLookup"> | Date | string
    modifiedBy?: IntNullableFilter<"FT_DetailedLookup"> | number | null
    modifiedDate?: DateTimeNullableFilter<"FT_DetailedLookup"> | Date | string | null
    comments?: StringNullableFilter<"FT_DetailedLookup"> | string | null
  }

  export type FT_DetailedLookupOrderByWithRelationInput = {
    Id?: SortOrder
    Master_ID?: SortOrder
    Code?: SortOrder
    Value_AR?: SortOrder
    Value_EN?: SortOrder
    isActive?: SortOrder
    createdBy?: SortOrder
    createdDate?: SortOrder
    modifiedBy?: SortOrderInput | SortOrder
    modifiedDate?: SortOrderInput | SortOrder
    comments?: SortOrderInput | SortOrder
  }

  export type FT_DetailedLookupWhereUniqueInput = Prisma.AtLeast<{
    Id?: number
    AND?: FT_DetailedLookupWhereInput | FT_DetailedLookupWhereInput[]
    OR?: FT_DetailedLookupWhereInput[]
    NOT?: FT_DetailedLookupWhereInput | FT_DetailedLookupWhereInput[]
    Master_ID?: IntFilter<"FT_DetailedLookup"> | number
    Code?: StringFilter<"FT_DetailedLookup"> | string
    Value_AR?: StringFilter<"FT_DetailedLookup"> | string
    Value_EN?: StringFilter<"FT_DetailedLookup"> | string
    isActive?: IntFilter<"FT_DetailedLookup"> | number
    createdBy?: IntFilter<"FT_DetailedLookup"> | number
    createdDate?: DateTimeFilter<"FT_DetailedLookup"> | Date | string
    modifiedBy?: IntNullableFilter<"FT_DetailedLookup"> | number | null
    modifiedDate?: DateTimeNullableFilter<"FT_DetailedLookup"> | Date | string | null
    comments?: StringNullableFilter<"FT_DetailedLookup"> | string | null
  }, "Id">

  export type FT_DetailedLookupOrderByWithAggregationInput = {
    Id?: SortOrder
    Master_ID?: SortOrder
    Code?: SortOrder
    Value_AR?: SortOrder
    Value_EN?: SortOrder
    isActive?: SortOrder
    createdBy?: SortOrder
    createdDate?: SortOrder
    modifiedBy?: SortOrderInput | SortOrder
    modifiedDate?: SortOrderInput | SortOrder
    comments?: SortOrderInput | SortOrder
    _count?: FT_DetailedLookupCountOrderByAggregateInput
    _avg?: FT_DetailedLookupAvgOrderByAggregateInput
    _max?: FT_DetailedLookupMaxOrderByAggregateInput
    _min?: FT_DetailedLookupMinOrderByAggregateInput
    _sum?: FT_DetailedLookupSumOrderByAggregateInput
  }

  export type FT_DetailedLookupScalarWhereWithAggregatesInput = {
    AND?: FT_DetailedLookupScalarWhereWithAggregatesInput | FT_DetailedLookupScalarWhereWithAggregatesInput[]
    OR?: FT_DetailedLookupScalarWhereWithAggregatesInput[]
    NOT?: FT_DetailedLookupScalarWhereWithAggregatesInput | FT_DetailedLookupScalarWhereWithAggregatesInput[]
    Id?: IntWithAggregatesFilter<"FT_DetailedLookup"> | number
    Master_ID?: IntWithAggregatesFilter<"FT_DetailedLookup"> | number
    Code?: StringWithAggregatesFilter<"FT_DetailedLookup"> | string
    Value_AR?: StringWithAggregatesFilter<"FT_DetailedLookup"> | string
    Value_EN?: StringWithAggregatesFilter<"FT_DetailedLookup"> | string
    isActive?: IntWithAggregatesFilter<"FT_DetailedLookup"> | number
    createdBy?: IntWithAggregatesFilter<"FT_DetailedLookup"> | number
    createdDate?: DateTimeWithAggregatesFilter<"FT_DetailedLookup"> | Date | string
    modifiedBy?: IntNullableWithAggregatesFilter<"FT_DetailedLookup"> | number | null
    modifiedDate?: DateTimeNullableWithAggregatesFilter<"FT_DetailedLookup"> | Date | string | null
    comments?: StringNullableWithAggregatesFilter<"FT_DetailedLookup"> | string | null
  }

  export type FT_MasterLookupWhereInput = {
    AND?: FT_MasterLookupWhereInput | FT_MasterLookupWhereInput[]
    OR?: FT_MasterLookupWhereInput[]
    NOT?: FT_MasterLookupWhereInput | FT_MasterLookupWhereInput[]
    Id?: IntFilter<"FT_MasterLookup"> | number
    value?: StringFilter<"FT_MasterLookup"> | string
    description_AR?: StringFilter<"FT_MasterLookup"> | string
    description_EN?: StringFilter<"FT_MasterLookup"> | string
    isActive?: IntFilter<"FT_MasterLookup"> | number
    createdBy?: IntFilter<"FT_MasterLookup"> | number
    createdDate?: DateTimeFilter<"FT_MasterLookup"> | Date | string
    modifiedBy?: IntNullableFilter<"FT_MasterLookup"> | number | null
    modifiedDate?: DateTimeNullableFilter<"FT_MasterLookup"> | Date | string | null
  }

  export type FT_MasterLookupOrderByWithRelationInput = {
    Id?: SortOrder
    value?: SortOrder
    description_AR?: SortOrder
    description_EN?: SortOrder
    isActive?: SortOrder
    createdBy?: SortOrder
    createdDate?: SortOrder
    modifiedBy?: SortOrderInput | SortOrder
    modifiedDate?: SortOrderInput | SortOrder
  }

  export type FT_MasterLookupWhereUniqueInput = Prisma.AtLeast<{
    Id?: number
    AND?: FT_MasterLookupWhereInput | FT_MasterLookupWhereInput[]
    OR?: FT_MasterLookupWhereInput[]
    NOT?: FT_MasterLookupWhereInput | FT_MasterLookupWhereInput[]
    value?: StringFilter<"FT_MasterLookup"> | string
    description_AR?: StringFilter<"FT_MasterLookup"> | string
    description_EN?: StringFilter<"FT_MasterLookup"> | string
    isActive?: IntFilter<"FT_MasterLookup"> | number
    createdBy?: IntFilter<"FT_MasterLookup"> | number
    createdDate?: DateTimeFilter<"FT_MasterLookup"> | Date | string
    modifiedBy?: IntNullableFilter<"FT_MasterLookup"> | number | null
    modifiedDate?: DateTimeNullableFilter<"FT_MasterLookup"> | Date | string | null
  }, "Id">

  export type FT_MasterLookupOrderByWithAggregationInput = {
    Id?: SortOrder
    value?: SortOrder
    description_AR?: SortOrder
    description_EN?: SortOrder
    isActive?: SortOrder
    createdBy?: SortOrder
    createdDate?: SortOrder
    modifiedBy?: SortOrderInput | SortOrder
    modifiedDate?: SortOrderInput | SortOrder
    _count?: FT_MasterLookupCountOrderByAggregateInput
    _avg?: FT_MasterLookupAvgOrderByAggregateInput
    _max?: FT_MasterLookupMaxOrderByAggregateInput
    _min?: FT_MasterLookupMinOrderByAggregateInput
    _sum?: FT_MasterLookupSumOrderByAggregateInput
  }

  export type FT_MasterLookupScalarWhereWithAggregatesInput = {
    AND?: FT_MasterLookupScalarWhereWithAggregatesInput | FT_MasterLookupScalarWhereWithAggregatesInput[]
    OR?: FT_MasterLookupScalarWhereWithAggregatesInput[]
    NOT?: FT_MasterLookupScalarWhereWithAggregatesInput | FT_MasterLookupScalarWhereWithAggregatesInput[]
    Id?: IntWithAggregatesFilter<"FT_MasterLookup"> | number
    value?: StringWithAggregatesFilter<"FT_MasterLookup"> | string
    description_AR?: StringWithAggregatesFilter<"FT_MasterLookup"> | string
    description_EN?: StringWithAggregatesFilter<"FT_MasterLookup"> | string
    isActive?: IntWithAggregatesFilter<"FT_MasterLookup"> | number
    createdBy?: IntWithAggregatesFilter<"FT_MasterLookup"> | number
    createdDate?: DateTimeWithAggregatesFilter<"FT_MasterLookup"> | Date | string
    modifiedBy?: IntNullableWithAggregatesFilter<"FT_MasterLookup"> | number | null
    modifiedDate?: DateTimeNullableWithAggregatesFilter<"FT_MasterLookup"> | Date | string | null
  }

  export type FT_ProjectsWhereInput = {
    AND?: FT_ProjectsWhereInput | FT_ProjectsWhereInput[]
    OR?: FT_ProjectsWhereInput[]
    NOT?: FT_ProjectsWhereInput | FT_ProjectsWhereInput[]
    id?: StringFilter<"FT_Projects"> | string
    name?: StringFilter<"FT_Projects"> | string
    code?: StringFilter<"FT_Projects"> | string
    clientId?: IntFilter<"FT_Projects"> | number
    startDate?: DateTimeFilter<"FT_Projects"> | Date | string
    endDate?: DateTimeFilter<"FT_Projects"> | Date | string
    ProjectManager?: IntFilter<"FT_Projects"> | number
    status?: IntFilter<"FT_Projects"> | number
    billingType?: IntFilter<"FT_Projects"> | number
    totalContract?: DecimalFilter<"FT_Projects"> | Decimal | DecimalJsLike | number | string
    approvedBudget?: DecimalFilter<"FT_Projects"> | Decimal | DecimalJsLike | number | string
    allocatedBudget?: DecimalFilter<"FT_Projects"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"FT_Projects"> | Date | string
    updatedAt?: DateTimeFilter<"FT_Projects"> | Date | string
    billingRateTimePeriod?: IntFilter<"FT_Projects"> | number
    createdBy?: IntFilter<"FT_Projects"> | number
  }

  export type FT_ProjectsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    clientId?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    ProjectManager?: SortOrder
    status?: SortOrder
    billingType?: SortOrder
    totalContract?: SortOrder
    approvedBudget?: SortOrder
    allocatedBudget?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    billingRateTimePeriod?: SortOrder
    createdBy?: SortOrder
  }

  export type FT_ProjectsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: FT_ProjectsWhereInput | FT_ProjectsWhereInput[]
    OR?: FT_ProjectsWhereInput[]
    NOT?: FT_ProjectsWhereInput | FT_ProjectsWhereInput[]
    name?: StringFilter<"FT_Projects"> | string
    code?: StringFilter<"FT_Projects"> | string
    clientId?: IntFilter<"FT_Projects"> | number
    startDate?: DateTimeFilter<"FT_Projects"> | Date | string
    endDate?: DateTimeFilter<"FT_Projects"> | Date | string
    ProjectManager?: IntFilter<"FT_Projects"> | number
    status?: IntFilter<"FT_Projects"> | number
    billingType?: IntFilter<"FT_Projects"> | number
    totalContract?: DecimalFilter<"FT_Projects"> | Decimal | DecimalJsLike | number | string
    approvedBudget?: DecimalFilter<"FT_Projects"> | Decimal | DecimalJsLike | number | string
    allocatedBudget?: DecimalFilter<"FT_Projects"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"FT_Projects"> | Date | string
    updatedAt?: DateTimeFilter<"FT_Projects"> | Date | string
    billingRateTimePeriod?: IntFilter<"FT_Projects"> | number
    createdBy?: IntFilter<"FT_Projects"> | number
  }, "id">

  export type FT_ProjectsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    clientId?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    ProjectManager?: SortOrder
    status?: SortOrder
    billingType?: SortOrder
    totalContract?: SortOrder
    approvedBudget?: SortOrder
    allocatedBudget?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    billingRateTimePeriod?: SortOrder
    createdBy?: SortOrder
    _count?: FT_ProjectsCountOrderByAggregateInput
    _avg?: FT_ProjectsAvgOrderByAggregateInput
    _max?: FT_ProjectsMaxOrderByAggregateInput
    _min?: FT_ProjectsMinOrderByAggregateInput
    _sum?: FT_ProjectsSumOrderByAggregateInput
  }

  export type FT_ProjectsScalarWhereWithAggregatesInput = {
    AND?: FT_ProjectsScalarWhereWithAggregatesInput | FT_ProjectsScalarWhereWithAggregatesInput[]
    OR?: FT_ProjectsScalarWhereWithAggregatesInput[]
    NOT?: FT_ProjectsScalarWhereWithAggregatesInput | FT_ProjectsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"FT_Projects"> | string
    name?: StringWithAggregatesFilter<"FT_Projects"> | string
    code?: StringWithAggregatesFilter<"FT_Projects"> | string
    clientId?: IntWithAggregatesFilter<"FT_Projects"> | number
    startDate?: DateTimeWithAggregatesFilter<"FT_Projects"> | Date | string
    endDate?: DateTimeWithAggregatesFilter<"FT_Projects"> | Date | string
    ProjectManager?: IntWithAggregatesFilter<"FT_Projects"> | number
    status?: IntWithAggregatesFilter<"FT_Projects"> | number
    billingType?: IntWithAggregatesFilter<"FT_Projects"> | number
    totalContract?: DecimalWithAggregatesFilter<"FT_Projects"> | Decimal | DecimalJsLike | number | string
    approvedBudget?: DecimalWithAggregatesFilter<"FT_Projects"> | Decimal | DecimalJsLike | number | string
    allocatedBudget?: DecimalWithAggregatesFilter<"FT_Projects"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeWithAggregatesFilter<"FT_Projects"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"FT_Projects"> | Date | string
    billingRateTimePeriod?: IntWithAggregatesFilter<"FT_Projects"> | number
    createdBy?: IntWithAggregatesFilter<"FT_Projects"> | number
  }

  export type FT_DetailedLookupCreateInput = {
    Master_ID: number
    Code: string
    Value_AR: string
    Value_EN: string
    isActive?: number
    createdBy: number
    createdDate?: Date | string
    modifiedBy?: number | null
    modifiedDate?: Date | string | null
    comments?: string | null
  }

  export type FT_DetailedLookupUncheckedCreateInput = {
    Id?: number
    Master_ID: number
    Code: string
    Value_AR: string
    Value_EN: string
    isActive?: number
    createdBy: number
    createdDate?: Date | string
    modifiedBy?: number | null
    modifiedDate?: Date | string | null
    comments?: string | null
  }

  export type FT_DetailedLookupUpdateInput = {
    Master_ID?: IntFieldUpdateOperationsInput | number
    Code?: StringFieldUpdateOperationsInput | string
    Value_AR?: StringFieldUpdateOperationsInput | string
    Value_EN?: StringFieldUpdateOperationsInput | string
    isActive?: IntFieldUpdateOperationsInput | number
    createdBy?: IntFieldUpdateOperationsInput | number
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    modifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    modifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FT_DetailedLookupUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Master_ID?: IntFieldUpdateOperationsInput | number
    Code?: StringFieldUpdateOperationsInput | string
    Value_AR?: StringFieldUpdateOperationsInput | string
    Value_EN?: StringFieldUpdateOperationsInput | string
    isActive?: IntFieldUpdateOperationsInput | number
    createdBy?: IntFieldUpdateOperationsInput | number
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    modifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    modifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FT_DetailedLookupCreateManyInput = {
    Master_ID: number
    Code: string
    Value_AR: string
    Value_EN: string
    isActive?: number
    createdBy: number
    createdDate?: Date | string
    modifiedBy?: number | null
    modifiedDate?: Date | string | null
    comments?: string | null
  }

  export type FT_DetailedLookupUpdateManyMutationInput = {
    Master_ID?: IntFieldUpdateOperationsInput | number
    Code?: StringFieldUpdateOperationsInput | string
    Value_AR?: StringFieldUpdateOperationsInput | string
    Value_EN?: StringFieldUpdateOperationsInput | string
    isActive?: IntFieldUpdateOperationsInput | number
    createdBy?: IntFieldUpdateOperationsInput | number
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    modifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    modifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FT_DetailedLookupUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Master_ID?: IntFieldUpdateOperationsInput | number
    Code?: StringFieldUpdateOperationsInput | string
    Value_AR?: StringFieldUpdateOperationsInput | string
    Value_EN?: StringFieldUpdateOperationsInput | string
    isActive?: IntFieldUpdateOperationsInput | number
    createdBy?: IntFieldUpdateOperationsInput | number
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    modifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    modifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FT_MasterLookupCreateInput = {
    value: string
    description_AR: string
    description_EN: string
    isActive?: number
    createdBy: number
    createdDate?: Date | string
    modifiedBy?: number | null
    modifiedDate?: Date | string | null
  }

  export type FT_MasterLookupUncheckedCreateInput = {
    Id?: number
    value: string
    description_AR: string
    description_EN: string
    isActive?: number
    createdBy: number
    createdDate?: Date | string
    modifiedBy?: number | null
    modifiedDate?: Date | string | null
  }

  export type FT_MasterLookupUpdateInput = {
    value?: StringFieldUpdateOperationsInput | string
    description_AR?: StringFieldUpdateOperationsInput | string
    description_EN?: StringFieldUpdateOperationsInput | string
    isActive?: IntFieldUpdateOperationsInput | number
    createdBy?: IntFieldUpdateOperationsInput | number
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    modifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    modifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type FT_MasterLookupUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    description_AR?: StringFieldUpdateOperationsInput | string
    description_EN?: StringFieldUpdateOperationsInput | string
    isActive?: IntFieldUpdateOperationsInput | number
    createdBy?: IntFieldUpdateOperationsInput | number
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    modifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    modifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type FT_MasterLookupCreateManyInput = {
    value: string
    description_AR: string
    description_EN: string
    isActive?: number
    createdBy: number
    createdDate?: Date | string
    modifiedBy?: number | null
    modifiedDate?: Date | string | null
  }

  export type FT_MasterLookupUpdateManyMutationInput = {
    value?: StringFieldUpdateOperationsInput | string
    description_AR?: StringFieldUpdateOperationsInput | string
    description_EN?: StringFieldUpdateOperationsInput | string
    isActive?: IntFieldUpdateOperationsInput | number
    createdBy?: IntFieldUpdateOperationsInput | number
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    modifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    modifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type FT_MasterLookupUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    description_AR?: StringFieldUpdateOperationsInput | string
    description_EN?: StringFieldUpdateOperationsInput | string
    isActive?: IntFieldUpdateOperationsInput | number
    createdBy?: IntFieldUpdateOperationsInput | number
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    modifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    modifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type FT_ProjectsCreateInput = {
    id?: string
    name: string
    code: string
    clientId: number
    startDate: Date | string
    endDate: Date | string
    ProjectManager: number
    status: number
    billingType: number
    totalContract: Decimal | DecimalJsLike | number | string
    approvedBudget: Decimal | DecimalJsLike | number | string
    allocatedBudget: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    billingRateTimePeriod: number
    createdBy: number
  }

  export type FT_ProjectsUncheckedCreateInput = {
    id?: string
    name: string
    code: string
    clientId: number
    startDate: Date | string
    endDate: Date | string
    ProjectManager: number
    status: number
    billingType: number
    totalContract: Decimal | DecimalJsLike | number | string
    approvedBudget: Decimal | DecimalJsLike | number | string
    allocatedBudget: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    billingRateTimePeriod: number
    createdBy: number
  }

  export type FT_ProjectsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    clientId?: IntFieldUpdateOperationsInput | number
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ProjectManager?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    billingType?: IntFieldUpdateOperationsInput | number
    totalContract?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    approvedBudget?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    allocatedBudget?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    billingRateTimePeriod?: IntFieldUpdateOperationsInput | number
    createdBy?: IntFieldUpdateOperationsInput | number
  }

  export type FT_ProjectsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    clientId?: IntFieldUpdateOperationsInput | number
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ProjectManager?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    billingType?: IntFieldUpdateOperationsInput | number
    totalContract?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    approvedBudget?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    allocatedBudget?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    billingRateTimePeriod?: IntFieldUpdateOperationsInput | number
    createdBy?: IntFieldUpdateOperationsInput | number
  }

  export type FT_ProjectsCreateManyInput = {
    id?: string
    name: string
    code: string
    clientId: number
    startDate: Date | string
    endDate: Date | string
    ProjectManager: number
    status: number
    billingType: number
    totalContract: Decimal | DecimalJsLike | number | string
    approvedBudget: Decimal | DecimalJsLike | number | string
    allocatedBudget: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    billingRateTimePeriod: number
    createdBy: number
  }

  export type FT_ProjectsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    clientId?: IntFieldUpdateOperationsInput | number
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ProjectManager?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    billingType?: IntFieldUpdateOperationsInput | number
    totalContract?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    approvedBudget?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    allocatedBudget?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    billingRateTimePeriod?: IntFieldUpdateOperationsInput | number
    createdBy?: IntFieldUpdateOperationsInput | number
  }

  export type FT_ProjectsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    clientId?: IntFieldUpdateOperationsInput | number
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ProjectManager?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    billingType?: IntFieldUpdateOperationsInput | number
    totalContract?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    approvedBudget?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    allocatedBudget?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    billingRateTimePeriod?: IntFieldUpdateOperationsInput | number
    createdBy?: IntFieldUpdateOperationsInput | number
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type FT_DetailedLookupCountOrderByAggregateInput = {
    Id?: SortOrder
    Master_ID?: SortOrder
    Code?: SortOrder
    Value_AR?: SortOrder
    Value_EN?: SortOrder
    isActive?: SortOrder
    createdBy?: SortOrder
    createdDate?: SortOrder
    modifiedBy?: SortOrder
    modifiedDate?: SortOrder
    comments?: SortOrder
  }

  export type FT_DetailedLookupAvgOrderByAggregateInput = {
    Id?: SortOrder
    Master_ID?: SortOrder
    isActive?: SortOrder
    createdBy?: SortOrder
    modifiedBy?: SortOrder
  }

  export type FT_DetailedLookupMaxOrderByAggregateInput = {
    Id?: SortOrder
    Master_ID?: SortOrder
    Code?: SortOrder
    Value_AR?: SortOrder
    Value_EN?: SortOrder
    isActive?: SortOrder
    createdBy?: SortOrder
    createdDate?: SortOrder
    modifiedBy?: SortOrder
    modifiedDate?: SortOrder
    comments?: SortOrder
  }

  export type FT_DetailedLookupMinOrderByAggregateInput = {
    Id?: SortOrder
    Master_ID?: SortOrder
    Code?: SortOrder
    Value_AR?: SortOrder
    Value_EN?: SortOrder
    isActive?: SortOrder
    createdBy?: SortOrder
    createdDate?: SortOrder
    modifiedBy?: SortOrder
    modifiedDate?: SortOrder
    comments?: SortOrder
  }

  export type FT_DetailedLookupSumOrderByAggregateInput = {
    Id?: SortOrder
    Master_ID?: SortOrder
    isActive?: SortOrder
    createdBy?: SortOrder
    modifiedBy?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type FT_MasterLookupCountOrderByAggregateInput = {
    Id?: SortOrder
    value?: SortOrder
    description_AR?: SortOrder
    description_EN?: SortOrder
    isActive?: SortOrder
    createdBy?: SortOrder
    createdDate?: SortOrder
    modifiedBy?: SortOrder
    modifiedDate?: SortOrder
  }

  export type FT_MasterLookupAvgOrderByAggregateInput = {
    Id?: SortOrder
    isActive?: SortOrder
    createdBy?: SortOrder
    modifiedBy?: SortOrder
  }

  export type FT_MasterLookupMaxOrderByAggregateInput = {
    Id?: SortOrder
    value?: SortOrder
    description_AR?: SortOrder
    description_EN?: SortOrder
    isActive?: SortOrder
    createdBy?: SortOrder
    createdDate?: SortOrder
    modifiedBy?: SortOrder
    modifiedDate?: SortOrder
  }

  export type FT_MasterLookupMinOrderByAggregateInput = {
    Id?: SortOrder
    value?: SortOrder
    description_AR?: SortOrder
    description_EN?: SortOrder
    isActive?: SortOrder
    createdBy?: SortOrder
    createdDate?: SortOrder
    modifiedBy?: SortOrder
    modifiedDate?: SortOrder
  }

  export type FT_MasterLookupSumOrderByAggregateInput = {
    Id?: SortOrder
    isActive?: SortOrder
    createdBy?: SortOrder
    modifiedBy?: SortOrder
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type FT_ProjectsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    clientId?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    ProjectManager?: SortOrder
    status?: SortOrder
    billingType?: SortOrder
    totalContract?: SortOrder
    approvedBudget?: SortOrder
    allocatedBudget?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    billingRateTimePeriod?: SortOrder
    createdBy?: SortOrder
  }

  export type FT_ProjectsAvgOrderByAggregateInput = {
    clientId?: SortOrder
    ProjectManager?: SortOrder
    status?: SortOrder
    billingType?: SortOrder
    totalContract?: SortOrder
    approvedBudget?: SortOrder
    allocatedBudget?: SortOrder
    billingRateTimePeriod?: SortOrder
    createdBy?: SortOrder
  }

  export type FT_ProjectsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    clientId?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    ProjectManager?: SortOrder
    status?: SortOrder
    billingType?: SortOrder
    totalContract?: SortOrder
    approvedBudget?: SortOrder
    allocatedBudget?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    billingRateTimePeriod?: SortOrder
    createdBy?: SortOrder
  }

  export type FT_ProjectsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    clientId?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    ProjectManager?: SortOrder
    status?: SortOrder
    billingType?: SortOrder
    totalContract?: SortOrder
    approvedBudget?: SortOrder
    allocatedBudget?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    billingRateTimePeriod?: SortOrder
    createdBy?: SortOrder
  }

  export type FT_ProjectsSumOrderByAggregateInput = {
    clientId?: SortOrder
    ProjectManager?: SortOrder
    status?: SortOrder
    billingType?: SortOrder
    totalContract?: SortOrder
    approvedBudget?: SortOrder
    allocatedBudget?: SortOrder
    billingRateTimePeriod?: SortOrder
    createdBy?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}